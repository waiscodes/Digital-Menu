// <auto-generated />
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Capstone.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int(10)");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "Starters",
                            RestaurantID = -1
                        },
                        new
                        {
                            ID = -2,
                            Name = "Main Course",
                            RestaurantID = -1
                        },
                        new
                        {
                            ID = -3,
                            Name = "Dessert",
                            RestaurantID = -1
                        },
                        new
                        {
                            ID = -4,
                            Name = "Drinks",
                            RestaurantID = -1
                        });
                });

            modelBuilder.Entity("Capstone.Models.MenuItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<int>("Calories")
                        .HasColumnType("int(10)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int(10)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<bool>("Halal")
                        .HasColumnType("boolean");

                    b.Property<string>("ImageName")
                        .HasColumnType("varchar(110)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Ingredients")
                        .HasColumnType("varchar(1000)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal(10, 2)");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int(10)");

                    b.Property<int>("WaitTimeMins")
                        .HasColumnType("int(10)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("MenuItem");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Calories = 450,
                            CategoryID = -1,
                            Description = "You don't have to go all the way to the moon for good cheese. Check out our out of this world dip.",
                            Halal = true,
                            ImageName = "Spring-Rolls.jpg",
                            Ingredients = "Cheese from out of this world",
                            Name = "Spring Rolls",
                            Price = 7.87m,
                            RestaurantID = -1,
                            WaitTimeMins = 4
                        },
                        new
                        {
                            ID = -2,
                            Calories = 600,
                            CategoryID = -1,
                            Description = "Fresh from Fighy Joe's... Well, as fresh as Fishy Joe's gets. Cajuan Popcorn Shrimp",
                            Halal = true,
                            ImageName = "French-Onion-Soup.jpg",
                            Ingredients = "Cajuan Popcorn Shrimp",
                            Name = "French Onion Soup",
                            Price = 10.99m,
                            RestaurantID = -1,
                            WaitTimeMins = 8
                        },
                        new
                        {
                            ID = -3,
                            Calories = 1200,
                            CategoryID = -2,
                            Description = "FBeef Sliders with Caramalized Onions",
                            Halal = true,
                            ImageName = "Scrum-Delicious-Burgers.jpg",
                            Ingredients = "Beef Sliders with Caramalized Onions",
                            Name = "Scrum Delicious Burgers",
                            Price = 13.85m,
                            RestaurantID = -1,
                            WaitTimeMins = 15
                        },
                        new
                        {
                            ID = -4,
                            Calories = 450,
                            CategoryID = -2,
                            Description = "Pizza with pineapples because pineapples belong on a pizza",
                            Halal = true,
                            ImageName = "Pineapple-Pizza.jpg",
                            Ingredients = "Pizza with Pineapple",
                            Name = "Pineapple Pizza",
                            Price = 9.85m,
                            RestaurantID = -1,
                            WaitTimeMins = 15
                        },
                        new
                        {
                            ID = -5,
                            Calories = 1200,
                            CategoryID = -2,
                            Description = "Steak from an Ameglian Major Cow, a cow that wants to be eaten",
                            Halal = false,
                            ImageName = "Ameglian-Steak.jpg",
                            Ingredients = "Ameglian Major Cow Shoulder",
                            Name = "Ameglian Steak",
                            Price = 55.88m,
                            RestaurantID = -1,
                            WaitTimeMins = 30
                        },
                        new
                        {
                            ID = -6,
                            Calories = 1200,
                            CategoryID = -3,
                            Description = "Cherry Filled homemade pop tart warm as an enemy's blood.",
                            Halal = false,
                            ImageName = "Klingon-Blood-Pies.jpg",
                            Ingredients = "Kingon Cherries",
                            Name = "Klingon Blood Pies",
                            Price = 15.88m,
                            RestaurantID = -1,
                            WaitTimeMins = 10
                        },
                        new
                        {
                            ID = -7,
                            Calories = 1200,
                            CategoryID = -4,
                            Description = "It's like having your brains smashed out by a slice of lemon wrapped round a large gold brick",
                            Halal = false,
                            ImageName = "Pan-Galactic-Gargle-Blaster.jpg",
                            Ingredients = "Ol' Janx Spirit, Qualactin Hypermint extract, Zamphuor, Olive",
                            Name = "Pan Galactic Gargle Blaster",
                            Price = 22.88m,
                            RestaurantID = -1,
                            WaitTimeMins = 10
                        });
                });

            modelBuilder.Entity("Capstone.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("ResLocation")
                        .HasColumnType("varchar(75)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("ResName")
                        .HasColumnType("varchar(75)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.Property<string>("ResUsername")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("ID");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Email = "dontpanic@gmail.com",
                            Password = "TrilogyOf5",
                            ResLocation = "At the End of the Universe",
                            ResName = "Milliways",
                            ResUsername = "Milliways"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Category", b =>
                {
                    b.HasOne("Capstone.Models.Restaurant", "Restaurant")
                        .WithMany("Categories")
                        .HasForeignKey("RestaurantID")
                        .HasConstraintName("FK_Category_Restaurant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Capstone.Models.MenuItem", b =>
                {
                    b.HasOne("Capstone.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_MenuItem_Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capstone.Models.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantID")
                        .HasConstraintName("FK_MenuItem_Restaurant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
